{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EditCourseDialogComponent = void 0;\nconst dialog_1 = require(\"@angular/material/dialog\");\nconst forms_1 = require(\"@angular/forms\");\nconst http_1 = require(\"@angular/common/http\");\nconst form_field_1 = require(\"@angular/material/form-field\");\nconst input_1 = require(\"@angular/material/input\");\nconst button_1 = require(\"@angular/material/button\");\nconst autocomplete_1 = require(\"@angular/material/autocomplete\");\nconst select_1 = require(\"@angular/material/select\");\nconst common_1 = require(\"@angular/common\");\nconst forms_2 = require(\"@angular/forms\");\nconst i0 = __importStar(require(\"@angular/core\"));\nconst i1 = __importStar(require(\"@angular/material/dialog\"));\nconst i2 = __importStar(require(\"@angular/forms\"));\nconst i3 = __importStar(require(\"@angular/common/http\"));\nconst i4 = __importStar(require(\"@angular/common\"));\nconst i5 = __importStar(require(\"@angular/material/form-field\"));\nconst i6 = __importStar(require(\"@angular/material/input\"));\nconst i7 = __importStar(require(\"@angular/material/button\"));\nconst i8 = __importStar(require(\"@angular/material/core\"));\nconst i9 = __importStar(require(\"@angular/material/select\"));\nconst _c0 = a0 => ({\n  \"invalid-date\": a0\n});\nfunction EditCourseDialogComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid Start Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditCourseDialogComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"End Date must be after Start Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditCourseDialogComponent_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currency_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", currency_r1, \" \");\n  }\n}\nlet EditCourseDialogComponent = /*#__PURE__*/(() => {\n  class EditCourseDialogComponent {\n    constructor(dialogRef, fb, http, data) {\n      this.dialogRef = dialogRef;\n      this.fb = fb;\n      this.http = http;\n      this.data = data;\n      this.startDateInvalid = false;\n      this.endDateInvalid = false;\n      this.universities = [];\n      this.filteredUniversities = [];\n      this.countries = [];\n      this.filteredCountries = [];\n      this.cities = [];\n      this.filteredCities = [];\n      this.currencies = ['USD', 'EUR', 'CZK', 'GBP', 'AUD', 'CAD', 'JPY'];\n      this.courseForm = this.fb.group({\n        courseName: [{\n          value: '',\n          disabled: true\n        }, forms_1.Validators.required],\n        university: [{\n          value: '',\n          disabled: true\n        }, forms_1.Validators.required],\n        city: [{\n          value: '',\n          disabled: true\n        }, forms_1.Validators.required],\n        country: [{\n          value: '',\n          disabled: true\n        }, forms_1.Validators.required],\n        startDate: ['', [forms_1.Validators.required, this.dateValidator]],\n        endDate: ['', [forms_1.Validators.required, this.dateValidator, this.endDateValidator.bind(this)]],\n        courseDescription: ['', forms_1.Validators.required],\n        price: [0, [forms_1.Validators.required, forms_1.Validators.min(0)]],\n        currency: ['', forms_1.Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.loadData();\n      if (this.data) {\n        this.courseForm.patchValue({\n          courseName: this.data.courseName,\n          university: this.data.university,\n          city: this.data.city,\n          country: this.data.country,\n          startDate: this.data.start,\n          endDate: this.data.end,\n          courseDescription: this.data.courseDescription,\n          price: this.data.price,\n          currency: this.data.currency\n        });\n        console.log('Start Date:', this.data.startDate || this.data.StartDate || this.data.start);\n        console.log('End Date:', this.data.endDate || this.data.EndDate || this.data.end);\n      }\n      this.courseForm.get('university').valueChanges.subscribe(value => {\n        this.filteredUniversities = this.filterOptions(value, this.universities);\n      });\n      this.courseForm.get('country').valueChanges.subscribe(value => {\n        this.filteredCountries = this.filterOptions(value, this.countries);\n      });\n      this.courseForm.get('city').valueChanges.subscribe(value => {\n        this.filteredCities = this.filterOptions(value, this.cities);\n      });\n    }\n    loadData() {\n      this.http.get('http://127.0.0.1:5000/courses').subscribe(data => {\n        this.universities = Array.from(new Set(data.map(course => course.University).filter(Boolean)));\n        this.countries = Array.from(new Set(data.map(course => course.Country).filter(Boolean)));\n        this.cities = Array.from(new Set(data.map(course => course.City).filter(Boolean)));\n      });\n    }\n    filterOptions(value, options) {\n      const filterValue = value.toLowerCase();\n      return options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n    formatDate(event) {\n      const input = event.target.value.replace(/[^0-9]/g, '');\n      if (input.length >= 4 && input.length <= 6) {\n        event.target.value = input.substring(0, 4) + '/' + input.substring(4, 6);\n      } else if (input.length > 6) {\n        event.target.value = input.substring(0, 4) + '/' + input.substring(4, 6) + '/' + input.substring(6, 8);\n      }\n      event.target.value = event.target.value.substring(0, 10);\n    }\n    dateValidator(control) {\n      const value = control.value;\n      if (value && !/^\\d{4}\\/\\d{2}\\/\\d{2}$/.test(value)) {\n        return {\n          'invalidDate': true\n        };\n      }\n      return null;\n    }\n    endDateValidator(control) {\n      const startDate = this.courseForm?.get('startDate')?.value;\n      const endDate = control.value;\n      if (startDate && endDate && new Date(startDate) > new Date(endDate)) {\n        this.endDateInvalid = true;\n        return {\n          'endBeforeStart': true\n        };\n      }\n      this.endDateInvalid = false;\n      return null;\n    }\n    onCancel() {\n      this.dialogRef.close();\n    }\n    onSave() {\n      if (this.courseForm.valid && !this.startDateInvalid && !this.endDateInvalid) {\n        const updatedCourseData = {\n          CourseName: this.courseForm.getRawValue().courseName,\n          University: this.courseForm.getRawValue().university,\n          City: this.courseForm.getRawValue().city,\n          Country: this.courseForm.getRawValue().country,\n          StartDate: new Date(this.courseForm.value.startDate).toISOString(),\n          EndDate: new Date(this.courseForm.value.endDate).toISOString(),\n          CourseDescription: this.courseForm.value.courseDescription,\n          Price: this.courseForm.value.price,\n          Currency: this.courseForm.value.currency\n        };\n        this.http.put(`http://127.0.0.1:5000/courses/${this.data._id}`, updatedCourseData).subscribe(response => {\n          console.log('Course updated successfully', response);\n          this.dialogRef.close(updatedCourseData);\n        }, error => {\n          console.error('Error updating course', error);\n        });\n      }\n    }\n    static #_ = this.ɵfac = function EditCourseDialogComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EditCourseDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditCourseDialogComponent,\n      selectors: [[\"app-edit-course-dialog\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 48,\n      vars: 11,\n      consts: [[1, \"dialog-form\", 3, \"ngSubmit\", \"formGroup\"], [\"mat-dialog-content\", \"\", 1, \"dialog-content\"], [\"mat-dialog-title\", \"\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"university\", \"readonly\", \"\"], [\"matInput\", \"\", \"formControlName\", \"city\", \"readonly\", \"\"], [\"matInput\", \"\", \"formControlName\", \"country\", \"readonly\", \"\"], [\"matInput\", \"\", \"formControlName\", \"courseName\", \"readonly\", \"\"], [\"matInput\", \"\", \"formControlName\", \"courseDescription\", \"placeholder\", \"Enter course description\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"startDate\", \"placeholder\", \"YYYY/MM/DD\", \"required\", \"\", 3, \"input\", \"ngClass\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"endDate\", \"placeholder\", \"YYYY/MM/DD\", \"required\", \"\", 3, \"input\", \"ngClass\"], [\"matInput\", \"\", \"formControlName\", \"price\", \"type\", \"number\", \"placeholder\", \"Enter price\", \"required\", \"\"], [\"formControlName\", \"currency\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 1, \"dialog-actions\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n      template: function EditCourseDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function EditCourseDialogComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSave();\n          });\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Edit Course\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"mat-form-field\", 3)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"University\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 3)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"City\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"mat-form-field\", 3)(13, \"mat-label\");\n          i0.ɵɵtext(14, \"Country\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 3)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Course Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"mat-form-field\", 3)(21, \"mat-label\");\n          i0.ɵɵtext(22, \"Course Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"textarea\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"mat-form-field\", 3)(25, \"mat-label\");\n          i0.ɵɵtext(26, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"input\", 9);\n          i0.ɵɵlistener(\"input\", function EditCourseDialogComponent_Template_input_input_27_listener($event) {\n            return ctx.formatDate($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, EditCourseDialogComponent_mat_error_28_Template, 2, 0, \"mat-error\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"mat-form-field\", 3)(30, \"mat-label\");\n          i0.ɵɵtext(31, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"input\", 11);\n          i0.ɵɵlistener(\"input\", function EditCourseDialogComponent_Template_input_input_32_listener($event) {\n            return ctx.formatDate($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(33, EditCourseDialogComponent_mat_error_33_Template, 2, 0, \"mat-error\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"mat-form-field\", 3)(35, \"mat-label\");\n          i0.ɵɵtext(36, \"Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(37, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"mat-form-field\", 3)(39, \"mat-label\");\n          i0.ɵɵtext(40, \"Currency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"mat-select\", 13);\n          i0.ɵɵtemplate(42, EditCourseDialogComponent_mat_option_42_Template, 2, 2, \"mat-option\", 14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(43, \"div\", 15)(44, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function EditCourseDialogComponent_Template_button_click_44_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(45, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"button\", 17);\n          i0.ɵɵtext(47, \"Save\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.startDateInvalid));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.startDateInvalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.endDateInvalid));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.endDateInvalid);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.courseForm.invalid || ctx.startDateInvalid || ctx.endDateInvalid);\n        }\n      },\n      dependencies: [common_1.CommonModule, i4.NgClass, i4.NgForOf, i4.NgIf, form_field_1.MatFormFieldModule, i5.MatFormField, i5.MatLabel, i5.MatError, input_1.MatInputModule, i6.MatInput, button_1.MatButtonModule, i7.MatButton, autocomplete_1.MatAutocompleteModule, i8.MatOption, select_1.MatSelectModule, i9.MatSelect, forms_2.ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".dialog-form[_ngcontent-%COMP%], .full-width[_ngcontent-%COMP%]{width:100%}.dialog-content[_ngcontent-%COMP%]{padding:0 24px;margin-bottom:16px;margin-top:16px}[_nghost-%COMP%]     .mat-dialog-container{border-radius:0;width:100%;max-width:600px;margin:0 auto;padding:0;box-sizing:border-box}h2.mat-dialog-title[_ngcontent-%COMP%]{width:100%;margin:0;text-align:center;padding:8px 24px}.dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:8px 24px}.invalid-date[_ngcontent-%COMP%]{border-color:red}\"]\n    });\n  }\n  return EditCourseDialogComponent;\n})();\nexports.EditCourseDialogComponent = EditCourseDialogComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}