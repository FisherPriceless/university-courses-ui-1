{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/autocomplete\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/select\";\nconst _c0 = a0 => ({\n  \"invalid-date\": a0\n});\nfunction AddCourseDialogComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\nfunction AddCourseDialogComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r3, \" \");\n  }\n}\nfunction AddCourseDialogComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction AddCourseDialogComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Invalid Start Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddCourseDialogComponent_mat_error_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"End Date must be after Start Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddCourseDialogComponent_mat_option_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currency_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", currency_r5, \" \");\n  }\n}\nexport let AddCourseDialogComponent = /*#__PURE__*/(() => {\n  class AddCourseDialogComponent {\n    dialogRef;\n    fb;\n    http;\n    courseForm;\n    startDateInvalid = false;\n    endDateInvalid = false;\n    universities = [];\n    filteredUniversities = [];\n    countries = [];\n    filteredCountries = [];\n    cities = [];\n    filteredCities = [];\n    currencies = ['USD', 'EUR', 'CZK', 'GBP', 'AUD', 'CAD', 'JPY'];\n    constructor(dialogRef, fb, http) {\n      this.dialogRef = dialogRef;\n      this.fb = fb;\n      this.http = http;\n      this.courseForm = this.fb.group({\n        courseName: ['', Validators.required],\n        university: ['', Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        startDate: ['', [Validators.required, this.dateValidator]],\n        endDate: ['', [Validators.required, this.dateValidator, this.endDateValidator.bind(this)]],\n        courseDescription: ['', Validators.required],\n        price: [0, [Validators.required, Validators.min(0)]],\n        currency: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.loadData();\n      this.courseForm.get('university').valueChanges.subscribe(value => {\n        this.filteredUniversities = this.filterOptions(value, this.universities);\n      });\n      this.courseForm.get('country').valueChanges.subscribe(value => {\n        this.filteredCountries = this.filterOptions(value, this.countries);\n      });\n      this.courseForm.get('city').valueChanges.subscribe(value => {\n        this.filteredCities = this.filterOptions(value, this.cities);\n      });\n    }\n    loadData() {\n      this.http.get('http://127.0.0.1:5000/courses').subscribe(data => {\n        this.universities = Array.from(new Set(data.map(course => course.University).filter(Boolean)));\n        this.countries = Array.from(new Set(data.map(course => course.Country).filter(Boolean)));\n        this.cities = Array.from(new Set(data.map(course => course.City).filter(Boolean)));\n      });\n    }\n    filterOptions(value, options) {\n      const filterValue = value.toLowerCase();\n      return options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n    formatDate(event) {\n      const input = event.target.value.replace(/[^0-9]/g, '');\n      if (input.length >= 4 && input.length <= 6) {\n        event.target.value = input.substring(0, 4) + '/' + input.substring(4, 6);\n      } else if (input.length > 6) {\n        event.target.value = input.substring(0, 4) + '/' + input.substring(4, 6) + '/' + input.substring(6, 8);\n      }\n      event.target.value = event.target.value.substring(0, 10);\n    }\n    dateValidator(control) {\n      const value = control.value;\n      if (value && !/^\\d{4}\\/\\d{2}\\/\\d{2}$/.test(value)) {\n        return {\n          'invalidDate': true\n        };\n      }\n      return null;\n    }\n    endDateValidator(control) {\n      const startDate = this.courseForm?.get('startDate')?.value;\n      const endDate = control.value;\n      if (startDate && endDate && new Date(startDate) > new Date(endDate)) {\n        this.endDateInvalid = true;\n        return {\n          'endBeforeStart': true\n        };\n      }\n      this.endDateInvalid = false;\n      return null;\n    }\n    onCancel() {\n      this.dialogRef.close();\n    }\n    onSave() {\n      if (this.courseForm.valid && !this.startDateInvalid && !this.endDateInvalid) {\n        const courseData = {\n          CourseName: this.courseForm.value.courseName,\n          University: this.courseForm.value.university,\n          City: this.courseForm.value.city,\n          Country: this.courseForm.value.country,\n          StartDate: new Date(this.courseForm.value.startDate.replace(/\\//g, '-')).toISOString(),\n          EndDate: new Date(this.courseForm.value.endDate.replace(/\\//g, '-')).toISOString(),\n          CourseDescription: this.courseForm.value.courseDescription,\n          Price: this.courseForm.value.price,\n          Currency: this.courseForm.value.currency\n        };\n        this.http.post('http://127.0.0.1:5000/courses', courseData).subscribe(response => {\n          console.log('Course saved successfully', response);\n          this.dialogRef.close(courseData);\n        }, error => {\n          console.error('Error saving course', error);\n        });\n      }\n    }\n    static ɵfac = function AddCourseDialogComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AddCourseDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddCourseDialogComponent,\n      selectors: [[\"app-add-course-dialog\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 57,\n      vars: 17,\n      consts: [[\"autoUniversity\", \"matAutocomplete\"], [\"autoCity\", \"matAutocomplete\"], [\"autoCountry\", \"matAutocomplete\"], [1, \"dialog-form\", 3, \"ngSubmit\", \"formGroup\"], [\"mat-dialog-content\", \"\", 1, \"dialog-content\"], [\"mat-dialog-title\", \"\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"university\", \"placeholder\", \"Enter university\", \"required\", \"\", 3, \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"city\", \"placeholder\", \"Enter city\", \"required\", \"\", 3, \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"country\", \"placeholder\", \"Enter country\", \"required\", \"\", 3, \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"courseName\", \"placeholder\", \"Enter course name\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"courseDescription\", \"placeholder\", \"Enter course description\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"startDate\", \"placeholder\", \"YYYY/MM/DD\", \"required\", \"\", 3, \"input\", \"ngClass\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"endDate\", \"placeholder\", \"YYYY/MM/DD\", \"required\", \"\", 3, \"input\", \"ngClass\"], [\"matInput\", \"\", \"formControlName\", \"price\", \"type\", \"number\", \"placeholder\", \"Enter price\", \"required\", \"\"], [\"formControlName\", \"currency\", \"required\", \"\"], [\"mat-dialog-actions\", \"\", 1, \"dialog-actions\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n      template: function AddCourseDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AddCourseDialogComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSave());\n          });\n          i0.ɵɵelementStart(1, \"div\", 4)(2, \"h2\", 5);\n          i0.ɵɵtext(3, \"Add New Course\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"mat-form-field\", 6)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"University\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 7);\n          i0.ɵɵelementStart(8, \"mat-autocomplete\", null, 0);\n          i0.ɵɵtemplate(10, AddCourseDialogComponent_mat_option_10_Template, 2, 2, \"mat-option\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 6)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"City\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵelementStart(15, \"mat-autocomplete\", null, 1);\n          i0.ɵɵtemplate(17, AddCourseDialogComponent_mat_option_17_Template, 2, 2, \"mat-option\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"mat-form-field\", 6)(19, \"mat-label\");\n          i0.ɵɵtext(20, \"Country\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 10);\n          i0.ɵɵelementStart(22, \"mat-autocomplete\", null, 2);\n          i0.ɵɵtemplate(24, AddCourseDialogComponent_mat_option_24_Template, 2, 2, \"mat-option\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"mat-form-field\", 6)(26, \"mat-label\");\n          i0.ɵɵtext(27, \"Course Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"mat-form-field\", 6)(30, \"mat-label\");\n          i0.ɵɵtext(31, \"Course Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"textarea\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"mat-form-field\", 6)(34, \"mat-label\");\n          i0.ɵɵtext(35, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"input\", 13);\n          i0.ɵɵlistener(\"input\", function AddCourseDialogComponent_Template_input_input_36_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.formatDate($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(37, AddCourseDialogComponent_mat_error_37_Template, 2, 0, \"mat-error\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"mat-form-field\", 6)(39, \"mat-label\");\n          i0.ɵɵtext(40, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"input\", 15);\n          i0.ɵɵlistener(\"input\", function AddCourseDialogComponent_Template_input_input_41_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.formatDate($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(42, AddCourseDialogComponent_mat_error_42_Template, 2, 0, \"mat-error\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"mat-form-field\", 6)(44, \"mat-label\");\n          i0.ɵɵtext(45, \"Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(46, \"input\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"mat-form-field\", 6)(48, \"mat-label\");\n          i0.ɵɵtext(49, \"Currency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"mat-select\", 17);\n          i0.ɵɵtemplate(51, AddCourseDialogComponent_mat_option_51_Template, 2, 2, \"mat-option\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(52, \"div\", 18)(53, \"button\", 19);\n          i0.ɵɵlistener(\"click\", function AddCourseDialogComponent_Template_button_click_53_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onCancel());\n          });\n          i0.ɵɵtext(54, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(55, \"button\", 20);\n          i0.ɵɵtext(56, \"Save\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const autoUniversity_r6 = i0.ɵɵreference(9);\n          const autoCity_r7 = i0.ɵɵreference(16);\n          const autoCountry_r8 = i0.ɵɵreference(23);\n          i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"matAutocomplete\", autoUniversity_r6);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredUniversities);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"matAutocomplete\", autoCity_r7);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredCities);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"matAutocomplete\", autoCountry_r8);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredCountries);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.startDateInvalid));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.startDateInvalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.endDateInvalid));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.endDateInvalid);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.courseForm.invalid || ctx.startDateInvalid || ctx.endDateInvalid);\n        }\n      },\n      dependencies: [CommonModule, i4.NgClass, i4.NgForOf, i4.NgIf, MatFormFieldModule, i5.MatFormField, i5.MatLabel, i5.MatError, MatInputModule, i6.MatInput, MatButtonModule, i7.MatButton, MatAutocompleteModule, i8.MatAutocomplete, i9.MatOption, i8.MatAutocompleteTrigger, MatSelectModule, i10.MatSelect, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".dialog-form[_ngcontent-%COMP%], .full-width[_ngcontent-%COMP%]{width:100%}.dialog-content[_ngcontent-%COMP%]{padding:0 24px;margin-bottom:16px;margin-top:16px}[_nghost-%COMP%]     .mat-dialog-container{border-radius:0;width:100%;max-width:600px;margin:0 auto;padding:0;box-sizing:border-box}h2.mat-dialog-title[_ngcontent-%COMP%]{width:100%;margin:0;text-align:center;padding:8px 24px}.dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:8px 24px}.invalid-date[_ngcontent-%COMP%]{border-color:red}\"]\n    });\n  }\n  return AddCourseDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}